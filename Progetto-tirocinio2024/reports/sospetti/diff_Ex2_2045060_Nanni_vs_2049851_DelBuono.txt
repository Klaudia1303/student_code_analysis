=== 2045060_Nanni - Ex2.py ===
def Ex2(file):
    """MODIFICARE IL CONTENUTO DI QUESTA FUNZIONE PER SVOLGERE L'ESERCIZIO"""
    f = open(file, encoding = 'UTF-8')
    testo = f.read()
    f.close()
    pattern = r'\b\w*(\w)\w*(\w)\w*\b\W\b\w*\2\w*\1\w*\b'
    s = re.findall(pattern, testo, re.IGNORECASE)
    volte = 0
    for i in s:
        volte += 1
    return volte
   
   
###############################################################################

if __name__ == '__main__':
    from tester import tester_fun
    import re

    counter_test_positivi = 0
    total_tests = 5

    counter_test_positivi += tester_fun(Ex2, ["file2_1.txt"] , 3)
    counter_test_positivi += tester_fun(Ex2, ["file2_2.txt"] , 6)
    counter_test_positivi += tester_fun(Ex2, ["file2_3.txt"] , 8)
    counter_test_positivi += tester_fun(Ex2, ["file2_4.txt"] , 9)
    counter_test_positivi += tester_fun(Ex2, ["file2_5.txt"] , 11)
    
    print('La funzione',Ex2.__name__,'ha superato',counter_test_positivi,'test su',total_tests)

============================================================
=== 2049851_DelBuono - Ex2.py ===
def Ex2(file):
    """MODIFICARE IL CONTENUTO DI QUESTA FUNZIONE PER SVOLGERE L'ESERCIZIO"""
    f = open(file,encoding="UTF-8")
    s = f.read()
    f.close()
    pattern = r'\b\w*(\w)\w*(\w)\w*\b\W*\b\w*\2\w*\1\w*\b'
    mn = re.finditer(pattern,s,re.IGNORECASE)
    c = 0
    for m in mn:
        c += 1
    return c
###############################################################################
##Ex2(file): scrivere una funzione Python che, preso in ingresso il nome di un file di testo, calcoli, usando
##le espressioni regolari, quante sono le sequenze non sovrapposte di 2 parole consecutive con la seguente
##proprietà:
##“Almeno 2 lettere della prima parola sono presenti anche nella seconda ma in ordine inverso,
##cioè se la prima lettera viene prima della seconda nella prima parola, deve venire dopo nella
##seconda.”
##Ignorate la differenza fra maiuscole e minuscole. Ad esempio, prendendo come input il file
##contenente il seguente testo:
##tanto va Aldo destinando in giro che era arrestato casa propria
##la funzione deve restituire come risultato 2.

if __name__ == '__main__':
    from tester import tester_fun
    import re

    counter_test_positivi = 0
    total_tests = 5

    counter_test_positivi += tester_fun(Ex2, ["file2_1.txt"] , 3)
    counter_test_positivi += tester_fun(Ex2, ["file2_2.txt"] , 6)
    counter_test_positivi += tester_fun(Ex2, ["file2_3.txt"] , 8)
    counter_test_positivi += tester_fun(Ex2, ["file2_4.txt"] , 9)
    counter_test_positivi += tester_fun(Ex2, ["file2_5.txt"] , 11)
    
    print('La funzione',Ex2.__name__,'ha superato',counter_test_positivi,'test su',total_tests)

