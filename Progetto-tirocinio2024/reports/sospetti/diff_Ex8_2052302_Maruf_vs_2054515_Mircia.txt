=== 2052302_Maruf - Ex8.py ===
MONTH_ORDINALS = {
    'A': 1,
    'B': 2,
    'C': 3,
    'D': 4,
    'E': 5,
    'H': 6,
    'L': 7,
    'M': 8,
    'P': 9,
    'R': 10,
    'S': 11,
    'T': 12
}

DAYS_IN_MONTH = {
    'A': 31,
    'B': 28,
    'C': 31,
    'D': 30,
    'E': 31,
    'H': 30,
    'L': 31,
    'M': 31,
    'P': 30,
    'R': 31,
    'S': 30,
    'T': 31
}

def Ex8(file):
    date_list = []
    file = open(file, encoding="UTF-8")
    regex_cf = r"\b[A-Z]{3} *[A-Z]{3} *([0-9]{2})([A-Z])([0-9]{2}) *[A-Z][0-9]{3}[A-Z]\b"
    
    for line in file:
        match = re.match(regex_cf, line)
        if not match is None:
            year = int(match.group(1))
            year += 2000 if year <= 20 else 1900        # normalizzazione dell'anno
            day = int(match.group(3))
            day -= 40 if day > 40 else 0                # normalizzazione del giorno
            month = match.group(2)
            day_limit = DAYS_IN_MONTH.get(month, 0)     # il get restituisce 0 se il mese è invalido

            if day_limit != 0:                          # se il limite è 0, il mese è invalido       
                if day <= day_limit:
                    date_list.append(f"{day:02d}/{MONTH_ORDINALS[month]:02d}/{year}")
                else:
                    date_list.append('Giorno errato')
            else:
                date_list.append('Mese errato')
        else:
            date_list.append('Codice errato')

    return date_list

        

    
###############################################################################

if __name__ == '__main__':
    from tester import tester_fun
    import re

    counter_test_positivi = 0
    total_tests = 5

    counter_test_positivi += tester_fun(Ex8, ["codici1.txt"] , ['12/03/1971', 'Codice errato', '15/04/2011', 'Mese errato', 'Giorno errato'])
    counter_test_positivi += tester_fun(Ex8, ["codici2.txt"] , ['12/03/1971', 'Codice errato', '15/04/2011', 'Mese errato', 'Giorno errato', 'Giorno errato', 'Codice errato', 'Giorno errato'])
    counter_test_positivi += tester_fun(Ex8, ["codici3.txt"] , ['12/03/1971', 'Codice errato', '15/04/2011', 'Mese errato', 'Giorno errato', 'Giorno errato', 'Codice errato', 'Giorno errato', '01/11/1921'])
    counter_test_positivi += tester_fun(Ex8, ["codici4.txt"] , ['12/03/1971', 'Codice errato', '15/04/2011', 'Mese errato', 'Giorno errato', 'Giorno errato', 'Codice errato', 'Giorno errato', '01/11/1921', '01/11/1931'])
    counter_test_positivi += tester_fun(Ex8, ["codici5.txt"] , ['12/03/1971', 'Codice errato', '15/04/2011', 'Mese errato', 'Giorno errato', 'Giorno errato', 'Codice errato', 'Giorno errato', '01/11/1921', '01/11/1931', 'Codice errato', 'Giorno errato'])

    print('La funzione',Ex8.__name__,'ha superato',counter_test_positivi,'test su',total_tests)

============================================================
=== 2054515_Mircia - Ex8.py ===
MONTH_ORDINALS = {
    'A': 1,
    'B': 2,
    'C': 3,
    'D': 4,
    'E': 5,
    'H': 6,
    'L': 7,
    'M': 8,
    'P': 9,
    'R': 10,
    'S': 11,
    'T': 12
}

DAYS_IN_MONTH = {
    'A': 31,
    'B': 28,
    'C': 31,
    'D': 30,
    'E': 31,
    'H': 30,
    'L': 31,
    'M': 31,
    'P': 30,
    'R': 31,
    'S': 30,
    'T': 31
}

def Ex8(file):
    date_list = []
    file = open(file, encoding="UTF-8")
    regex_cf = r"\b[A-Z]{3} *[A-Z]{3} *([0-9]{2})([A-Z])([0-9]{2}) *[A-Z][0-9]{3}[A-Z]\b"
    
    for line in file:
        match = re.match(regex_cf, line)
        if not match is None:
            year = int(match.group(1))
            year += 2000 if year <= 20 else 1900        # normalizzazione dell'anno
            day = int(match.group(3))
            day -= 40 if day > 40 else 0                # normalizzazione del giorno
            month = match.group(2)
            day_limit = DAYS_IN_MONTH.get(month, 0)     # il get restituisce 0 se il mese è invalido

            if day_limit != 0:                          # se il limite è 0, il mese è invalido       
                if day <= day_limit:
                    date_list.append(f"{day:02d}/{MONTH_ORDINALS[month]:02d}/{year}")
                else:
                    date_list.append('Giorno errato')
            else:
                date_list.append('Mese errato')
        else:
            date_list.append('Codice errato')

    return date_list

        

    
###############################################################################

if __name__ == '__main__':
    from tester import tester_fun
    import re

    counter_test_positivi = 0
    total_tests = 5

    counter_test_positivi += tester_fun(Ex8, ["codici1.txt"] , ['12/03/1971', 'Codice errato', '15/04/2011', 'Mese errato', 'Giorno errato'])
    counter_test_positivi += tester_fun(Ex8, ["codici2.txt"] , ['12/03/1971', 'Codice errato', '15/04/2011', 'Mese errato', 'Giorno errato', 'Giorno errato', 'Codice errato', 'Giorno errato'])
    counter_test_positivi += tester_fun(Ex8, ["codici3.txt"] , ['12/03/1971', 'Codice errato', '15/04/2011', 'Mese errato', 'Giorno errato', 'Giorno errato', 'Codice errato', 'Giorno errato', '01/11/1921'])
    counter_test_positivi += tester_fun(Ex8, ["codici4.txt"] , ['12/03/1971', 'Codice errato', '15/04/2011', 'Mese errato', 'Giorno errato', 'Giorno errato', 'Codice errato', 'Giorno errato', '01/11/1921', '01/11/1931'])
    counter_test_positivi += tester_fun(Ex8, ["codici5.txt"] , ['12/03/1971', 'Codice errato', '15/04/2011', 'Mese errato', 'Giorno errato', 'Giorno errato', 'Codice errato', 'Giorno errato', '01/11/1921', '01/11/1931', 'Codice errato', 'Giorno errato'])

    print('La funzione',Ex8.__name__,'ha superato',counter_test_positivi,'test su',total_tests)

