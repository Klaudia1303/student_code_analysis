=== 2031203_Giandomenico - Ex5.py ===
def Ex5(file):
    """MODIFICARE IL CONTENUTO DI QUESTA FUNZIONE PER SVOLGERE L'ESERCIZIO"""    
    f = open(file,encoding="UTF-8")
    pauto = r'[A-Z]{2}\d{3}[A-Z]{2}'
    pmoto = r'[A-Z]{2}\d{5}'
    pciclo1 = r'[A-Z0-9]{5}'
    pciclo2 = r'[A-Z0-9]{6}'
    d = {'auto':0,'moto':0,'ciclomotore1':0,'ciclomotore2':0,'errata':0}
    for i in f:
        x = "".join(i.strip().split("\n"))
        print(x)
        if re.match(pauto,x) and len(x)==7:
            d['auto'] += 1
        elif re.match(pmoto,x) and len(x)==7:
            d['moto'] += 1
        elif re.match(pciclo1,x) and len(x)==5:
            d['ciclomotore1'] += 1
        elif re.match(pciclo2,x) and len(x)==6:
            d['ciclomotore2'] += 1
        else:
            d['errata'] += 1
    f.close()
    return d
###############################################################################

if __name__ == '__main__':
    from tester import tester_fun
    import re

    counter_test_positivi = 0
    total_tests = 5

    counter_test_positivi += tester_fun(Ex5, ["targhe1.txt"] , {'auto': 2, 'moto': 1, 'ciclomotore1': 1, 'ciclomotore2': 1, 'errata': 1})
    counter_test_positivi += tester_fun(Ex5, ["targhe2.txt"] , {'auto': 2, 'moto': 1, 'ciclomotore1': 1, 'ciclomotore2': 1, 'errata': 2})
    counter_test_positivi += tester_fun(Ex5, ["targhe3.txt"] , {'auto': 3, 'moto': 1, 'ciclomotore1': 1, 'ciclomotore2': 1, 'errata': 3})
    counter_test_positivi += tester_fun(Ex5, ["targhe4.txt"] , {'auto': 3, 'moto': 1, 'ciclomotore1': 1, 'ciclomotore2': 1, 'errata': 4})
    counter_test_positivi += tester_fun(Ex5, ["targhe5.txt"] , {'auto': 2, 'moto': 1, 'ciclomotore1': 1, 'ciclomotore2': 1, 'errata': 5})
    
    print('La funzione',Ex5.__name__,'ha superato',counter_test_positivi,'test su',total_tests)

============================================================
=== 2049851_DelBuono - Ex5.py ===
def Ex5(file):
    """MODIFICARE IL CONTENUTO DI QUESTA FUNZIONE PER SVOLGERE L'ESERCIZIO"""    
    f = open(file,encoding="UTF-8")
    pauto = r'[A-Z]{2}\d{3}[A-Z]{2}'
    pmoto = r'[A-Z]{2}\d{5}'
    pciclo1 = r'[A-Z0-9]{5}'
    pciclo2 = r'[A-Z0-9]{6}'
    d = {'auto':0,'moto':0,'ciclomotore1':0,'ciclomotore2':0,'errata':0}
    for i in f:
        x = "".join(i.strip().split("\n"))
        print(x)
        if re.match(pauto,x) and len(x)==7:
            d['auto'] += 1
        elif re.match(pmoto,x) and len(x)==7:
            d['moto'] += 1
        elif re.match(pciclo1,x) and len(x)==5:
            d['ciclomotore1'] += 1
        elif re.match(pciclo2,x) and len(x)==6:
            d['ciclomotore2'] += 1
        else:
            d['errata'] += 1
    f.close()
    return d    
###############################################################################
##Ex5(file): scrivere una funzione Python che, preso in ingresso il nome di un file di testo contenente dei
##numeri di targa, uno per riga, come nel seguente esempio:
##AA234XX
##AX54DS
##PP2P3
##QQ12345
##ZZXZ
##BB111ZZ
##E costruisce un dizionario con 5 chiavi ('auto', 'moto', 'ciclomotore1', 'ciclomotore2', 'errata') e valore in
##numero di targhe corrispondenti. Le targhe hanno il formato:
##auto: 2 lettere maiuscole 3 cifre 2 lettere maiuscole
##moto: 2 lettere maiuscole 5 cifre
##ciclomotore1: 5 lettere maiuscole o cifre
##ciclomotore2: 6 lettere maiuscole o cifre
##Tutte le targhe che non rispettano nessuno di questi formati vanno considerate errate. Nellâ€™esempio
##precedente, la funzione deve restituire {'auto': 2, 'moto':1, 'ciclomotore1':1, 'ciclomotore2':1, 'errata':1}.
if __name__ == '__main__':
    from tester import tester_fun
    import re

    counter_test_positivi = 0
    total_tests = 5

    counter_test_positivi += tester_fun(Ex5, ["targhe1.txt"] , {'auto': 2, 'moto': 1, 'ciclomotore1': 1, 'ciclomotore2': 1, 'errata': 1})
    counter_test_positivi += tester_fun(Ex5, ["targhe2.txt"] , {'auto': 2, 'moto': 1, 'ciclomotore1': 1, 'ciclomotore2': 1, 'errata': 2})
    counter_test_positivi += tester_fun(Ex5, ["targhe3.txt"] , {'auto': 3, 'moto': 1, 'ciclomotore1': 1, 'ciclomotore2': 1, 'errata': 3})
    counter_test_positivi += tester_fun(Ex5, ["targhe4.txt"] , {'auto': 3, 'moto': 1, 'ciclomotore1': 1, 'ciclomotore2': 1, 'errata': 4})
    counter_test_positivi += tester_fun(Ex5, ["targhe5.txt"] , {'auto': 2, 'moto': 1, 'ciclomotore1': 1, 'ciclomotore2': 1, 'errata': 5})
    
    print('La funzione',Ex5.__name__,'ha superato',counter_test_positivi,'test su',total_tests)

