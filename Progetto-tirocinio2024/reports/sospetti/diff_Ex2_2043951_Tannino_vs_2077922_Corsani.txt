=== 2043951_Tannino - Ex2.py ===
def Ex2(file):
    fin=open(file,encoding='UTF-8')
    testo=fin.read()
    fin.close()
    pattern=r'\b\w*(\w)\w*(\w)\w*\b\W+\b\w*\2\w*\1\w*\b'
    ris=re.finditer(pattern,testo,re.IGNORECASE)
    conta=0
    for elem in ris:
        conta+=1
    return conta
   
###############################################################################

if __name__ == '__main__':
    from tester import tester_fun
    import re

    counter_test_positivi = 0
    total_tests = 5

    counter_test_positivi += tester_fun(Ex2, ["file2_1.txt"] , 3)
    counter_test_positivi += tester_fun(Ex2, ["file2_2.txt"] , 6)
    counter_test_positivi += tester_fun(Ex2, ["file2_3.txt"] , 8)
    counter_test_positivi += tester_fun(Ex2, ["file2_4.txt"] , 9)
    counter_test_positivi += tester_fun(Ex2, ["file2_5.txt"] , 11)
    
    print('La funzione',Ex2.__name__,'ha superato',counter_test_positivi,'test su',total_tests)

============================================================
=== 2077922_Corsani - Ex2.py ===
#Jacopo Corsani - Corso di Laurea in Ingegneria Informatica e Automatica A.A. 2022-23 - Laboratorio di Fondamenti di Programmazione - ES.2


def Ex2(file):
    a = open(file,encoding="UTF-8")
    x = a.read()
    a.close()
    pattern = r'\b\w*(\w)\w*(\w)\w*\b\W*\b\w*\2\w*\1\w*\b'
    ris = re.finditer(pattern,x,re.IGNORECASE)
    c = 0
    for m in ris:
        c += 1
    return c

###############################################################################

if __name__ == '__main__':
    from tester import tester_fun
    import re

    counter_test_positivi = 0
    total_tests = 5

    counter_test_positivi += tester_fun(Ex2, ["file2_1.txt"] , 3)
    counter_test_positivi += tester_fun(Ex2, ["file2_2.txt"] , 6)
    counter_test_positivi += tester_fun(Ex2, ["file2_3.txt"] , 8)
    counter_test_positivi += tester_fun(Ex2, ["file2_4.txt"] , 9)
    counter_test_positivi += tester_fun(Ex2, ["file2_5.txt"] , 11)
    
    print('La funzione',Ex2.__name__,'ha superato',counter_test_positivi,'test su',total_tests)

